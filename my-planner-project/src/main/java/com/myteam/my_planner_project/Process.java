package com.myteam.my_planner_project;

/**
 * This class was automatically generated by the data modeler tool.
 */

@org.optaplanner.core.api.domain.entity.PlanningEntity(difficultyComparatorClass = Process.DifficultyComparator.class)
public class Process implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	private int requiredCpu;

	@org.optaplanner.core.api.domain.variable.PlanningVariable(valueRangeProviderRefs = {"computers"})
	private com.myteam.my_planner_project.Computer computer;

	public Process() {
	}

	public int getRequiredCpu() {
		return this.requiredCpu;
	}

	public void setRequiredCpu(int requiredCpu) {
		this.requiredCpu = requiredCpu;
	}

	public com.myteam.my_planner_project.Computer getComputer() {
		return this.computer;
	}

	public void setComputer(com.myteam.my_planner_project.Computer computer) {
		this.computer = computer;
	}

	public Process(int requiredCpu,
			com.myteam.my_planner_project.Computer computer) {
		this.requiredCpu = requiredCpu;
		this.computer = computer;
	}

	@javax.annotation.Generated(value = {"org.optaplanner.workbench.screens.domaineditor.service.ComparatorDefinitionService"})
	@org.optaplanner.workbench.screens.domaineditor.model.ComparatorDefinition(objectPropertyPaths = {@org.optaplanner.workbench.screens.domaineditor.model.ComparatorObjectPropertyPath(ascending = true, objectProperties = {@org.optaplanner.workbench.screens.domaineditor.model.ComparatorObjectProperty(name = "requiredCpu", type = int.class)})})
	public static class DifficultyComparator
			implements
				java.io.Serializable,
				java.util.Comparator<com.myteam.my_planner_project.Process> {
		static final long serialVersionUID = 1L;

		@javax.annotation.Generated(value = {"org.optaplanner.workbench.screens.domaineditor.service.ComparatorDefinitionService"})
		public int compare(com.myteam.my_planner_project.Process o1,
				com.myteam.my_planner_project.Process o2) {
			return java.util.Comparator
					.comparing(
							(com.myteam.my_planner_project.Process o) -> {
								Object tempResult = o;
								tempResult = tempResult == null
										? null
										: ((com.myteam.my_planner_project.Process) tempResult)
												.getRequiredCpu();
								return (int) tempResult;
							}).compare(o1, o2);
		}
	}

}